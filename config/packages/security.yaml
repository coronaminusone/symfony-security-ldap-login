security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    password_hashers:
        # this internal class is used by Symfony to represent in-memory users
        # (the 'InMemoryUser' class was introduced in Symfony 5.3.
        # In previous versions it was called 'User')
        Symfony\Component\Security\Core\User\InMemoryUser: 'auto'
        App\Entity\User: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory:
            memory:
                users:
                    john: { password: '$2y$13$zrK3oibk8KK3PxO/bkFrduFj61jsPbEBZlAiaAaK2rKlanv2E4UhG', roles: [ 'ROLE_ADMIN' ] }
                    jane: { password: '$2y$13$zrK3oibk8KK3PxO/bkFrduFj61jsPbEBZlAiaAaK2rKlanv2E4UhG', roles: [ 'ROLE_ADMIN', 'ROLE_SUPER_ADMIN' ] }
        users_from_database:
            entity:
                # the class of the entity that represents users
                class: 'App\Entity\User'
                # the property to query by - e.g. username, email, etc
                property: 'username'

        users_from_ldap:
            ldap:
                service: Symfony\Component\Ldap\Ldap
                base_dn: 'DC=asv,DC=local'
                search_dn: '%env(AD_SEARCHDN)%'
                search_password: '%env(AD_SEARCHPWD)%'
                default_roles: ["ROLE_USER"]
                filter:  "(&(objectClass=user)(sAMAccountName={username}))"
                uid_key: "sAMAccountName"

        all_users:
            chain:
                providers: [ 'users_in_memory', 'users_from_database', 'users_from_ldap' ]

        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
                # optional: if you're using multiple Doctrine entity
                # managers, this option defines which one to use
                # manager_name: 'customer'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy:           true
            provider:       all_users

            json_login:
                login_path: login
                check_path: login
                username_path: username
                password_path: password

            json_login_ldap:
                service: Symfony\Component\Ldap\Ldap
                dn_string: '%env(AD_DNSTRING)%'
                login_path: login
                check_path: login
                username_path: username
                password_path: password

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
